extern "C" %{

  #include "math.h"
  #include "parsec.h"
  #include "h2_ptg_internal.h"

%}

/* data descriptors */
parsec_D [ type="parsec_data_collection_t*"]
h2_params [ type="h2_factorize_params_t*" ]

multiply_complements(i, j, level)

level = h2_params->min_level .. 3
i = 0 .. %{ return pow(2, level); %}
j = 0 .. %{ return pow(2, level); %}

  : parsec_D(i, j, level)
/**
 * Here we define which process will execute the task, this is explained in
 * further details in following examples
 */

/**
 * A task has a finite number of input/output, and needs at least one input even
 * if this one is not used. We start here by a task that doesn't use
 * information, so we have only one 'flow' named A that receives NULL.
 */
READ A <- NULL

/**
 * This is the body of the task that will be executed by one of the thread in the
 * engine.
 */
BODY
{
  printf("HelloWorld %d %d %d\n", i, j, level);
}
END
